name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  generate_matrix_config:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate_matrix_config.outputs.apps }}
    steps:
      - id: generate_matrix_config
        run: echo 'apps=["frontend", "backend"]' >> "$GITHUB_OUTPUT"
      - run: echo "generate matrix config"

  install_dependency:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute install_dependency ${{ matrix.app }}"

  format:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, install_dependency]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute format ${{ matrix.app }}"

  lint:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, install_dependency]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute lint ${{ matrix.app }}"

  type:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, install_dependency]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute type ${{ matrix.app }}"

  test:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, lint, format, type]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute test ${{ matrix.app }}"

  build:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, test]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute build docker ${{ matrix.app }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, build]
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.generate_matrix_config.outputs.matrix) }}
    steps:
      - run: echo "execute deploy ${{ matrix.app }}"

  notify:
    runs-on: ubuntu-latest
    needs: [generate_matrix_config, install_dependency, format, lint, type, test, build, deploy]
    if: always()
    steps:
      - run: echo "execute deploy"
